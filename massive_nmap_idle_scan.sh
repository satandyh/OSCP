#!/bin/bash

# наша цель
target="xx.xx.xx.xx"
# считываем файл с ip адресами zombi в массив
file="/home/ant/Documents/test"
readarray zombi < $file
# количество наших zombi
zc=${#zombi[*]}

# функция разбиения всего диапазона портов на поддиапазоны
# количество поддиапазонов равно количеству zombi
## надо усовершенствовать эту функцию указав значения по умолчанию
function ranges {

let "ports=65535 / $zc"
zr=()

for ((x=0; x<$zc; x++)); do
    if [[ $(( $x + 1 )) == $zc ]]; then
        # если это последний зомби, то отдаем ему немного больше портов
        # остаток от деления
        zr+=($((x * ports + 1))-$(((x+1) * $ports + (65535%zc))))
    else
        zr+=($((x * ports + 1))-$(((x+1) * $ports)))
    fi
done

# передаем поддиапазоны$
echo ${zr[*]}
}

# главная исполняющая функция
# просто собирает все значения из других функций
# и формирует команды nmap в параллельном режиме - спасибо трюку c &
## надо добавить какой-нибудь общий rate-limit пакетов приходящих к цели
function main {

# берем наши поддиапазоны
#local portranges
portranges=(`ranges`)
 
for ((i=0; i<$zc; i++)); do
    (
    # считаем что цель активна
    # используем rand значения для длины пакетов с помощью $(($RANDOM % 64))
    # перечисляем диапазоны
    # перечисляем наших zombi
    # сама цель идет последней
    nmap --mtu 32 -Pn --data-length $((RANDOM % 64)) -p ${portranges[$i]} -sI ${zombi[$i]} $target
    #echo ${zombi[$i]}
    )&
done$
}

# вызываем функцию
main

exit 0
